version: "3"

services:
  traefik:
    image: traefik:v3.1
    restart: always
    command:
      - "--providers.docker=true" # Enable Docker as a provider
      - "--entrypoints.web.address=:80" # Entry point for HTTP traffic
      - "--entrypoints.websecure.address=:443" # Entry point for HTTPS traffic (optional)
      - "--providers.docker.exposedByDefault=false" # Disable exposing services by default
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true" # Enable TLS challenge (optional for HTTPS)
      - "--certificatesresolvers.myresolver.acme.email=support@octabyte.io" # Email for SSL certs (optional)
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json" # Path to store certs (optional)
    ports:
      - "80:80" # Traefik listening on port 80
      - "443:443" # Traefik listening on port 443 (for HTTPS)
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro" # To interact with Docker
      - "./letsencrypt:/letsencrypt" # For SSL certificate storage (optional)

  base: &base
    image: chatwoot/chatwoot:${SOFTWARE_VERSION_TAG}
    restart: always
    env_file: .env ## Change this file for customized env variables
    volumes:
      - /opt/app/data/storage:/app/storage
  rails:
    <<: *base
    depends_on:
      - postgres
      - redis
    restart: always
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    command: ["bundle", "exec", "rails", "s", "-p", "3000", "-b", "0.0.0.0"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${APP_URL}`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.routers.frontend.entrypoints=websecure"

  sidekiq:
    <<: *base
    depends_on:
      - postgres
      - redis
    restart: always
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
    command: ["bundle", "exec", "sidekiq", "-C", "config/sidekiq.yml"]

  postgres:
    image: postgres:12
    restart: always
    ports:
      - "172.17.0.1:5432:5432"
    volumes:
      - /opt/app/data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatwoot
      - POSTGRES_USER=postgres
      # Please provide your own password.
      - POSTGRES_PASSWORD=${SOFTWARE_PASSWORD}

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - /opt/app/data/redis:/data
    ports:
      - "172.17.0.1:6379:6379"
